# -*- coding: utf-8 -*-
"""Assignment-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DH-alhitdIrte6u3mrQkPK8Vvth11BYG
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

df = pd.read_csv("spotify_songs.csv")
df.head()

#univariate analysis
df.info()

df.describe()

# Histograms for numerical variables
df.hist(figsize=(12, 10), bins=20, edgecolor='black')
plt.suptitle("Distribution of Numerical Variables")
plt.show()

# Boxplots to check for outliers
plt.figure(figsize=(12, 6))
sns.boxplot(data=df)
plt.xticks(rotation=45)
plt.title("Boxplot of Numerical Features")
plt.show()

# Count plots for categorical variables
categorical_cols = df.select_dtypes(include=['object']).columns
for col in categorical_cols:
    plt.figure(figsize=(8, 4))
    sns.countplot(data=df, x=col, order=df[col].value_counts().index)
    plt.xticks(rotation=45)
    plt.title(f"Distribution of {col}")
    plt.show()

# Correlation matrix for numerical variables
plt.figure(figsize=(10, 8))
numerical_df = df.select_dtypes(include=np.number)
sns.heatmap(numerical_df.corr(), annot=True, cmap='coolwarm', fmt='.2f')
plt.title("Correlation Heatmap")
plt.show()

# Scatter plot for numerical relationships
sns.pairplot(df)
plt.show()

# Boxplot of numerical variable by a categorical feature
if 'track_genre' in df.columns and 'danceability' in df.columns:
    plt.figure(figsize=(12, 6))
    sns.boxplot(x='track_genre', y='danceability', data=df)
    plt.xticks(rotation=90)
    plt.title("Danceability Distribution Across Genres")
    plt.show()

# Categorical vs Categorical (if applicable)
if 'track_genre' in df.columns and 'playlist_name' in df.columns:
    cross_tab = pd.crosstab(df['track_genre'], df['playlist_name'])
    plt.figure(figsize=(12, 8))
    sns.heatmap(cross_tab, annot=False, cmap='Blues')
    plt.title("Genre vs Playlist Heatmap")
    plt.show()

# Save the cleaned dataset
df.to_csv("Spotify_Songs_Cleaned.csv", index=False)